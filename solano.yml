timeout: 7200
python:
  python_version:  2.7
submodules: true
environment:
  'TZ' : Etc/UTC
  'TESTMODE': fast
  'REFGUIDE_CHECK': 1
  'COVERAGE': ''
  'NPY_RELAXED_STRIDES_CHECKING': 1
  'NUMPYSPEC': '--upgrade git+git://github.com/numpy/numpy.git@v1.10.4'
tests:
   - |
     set -o pipefail
     set -ev
     python -c 'import numpy as np; print("relaxed strides checking:", np.ones((10,1),order="C").flags.f_contiguous)'
     if [ "$NPY_RELAXED_STRIDES_CHECKING" == "1" ]; then
       python -c 'import numpy as np; assert np.ones((10,1),order="C").flags.f_contiguous'
     fi
   - |
     set -o pipefail
     set -ev
     python -c 'import mpmath.libmp; print("mpmath.libmp.BACKEND:",  mpmath.libmp.BACKEND == "gmpy");  print("mpmath.libmp.BACKEND:", mpmath.libmp.BACKEND)'
     python -c 'import mpmath.libmp; assert mpmath.libmp.BACKEND == "gmpy"'
   - |
     set -o pipefail
     set -ev
     if [ "$USE_WHEEL" == "1" ]; then
       pip wheel . -v
       pip install scipy*.whl -v
       USE_WHEEL_BUILD="--no-build"
     elif [ "$USE_SDIST" == "1" ]; then
       python setup.py sdist
       pushd dist;
       pip install scipy*
       popd
       USE_WHEEL_BUILD="--no-build"
     fi
     python -u $OPTIMIZE runtests.py -g -m $TESTMODE $COVERAGE $USE_WHEEL_BUILD |& tee runtests.log
     tools/validate_runtests_log.py $TESTMODE < runtests.log
     if [ "$REFGUIDE_CHECK" == "1" ]; then
       python runtests.py -g --refguide-check;
     fi
hooks:
  pre: |
    set -v
    uname -a
    free -m
    sudo df -h
    ulimit -a
    sudo apt-get -f -y install
    sudo apt-get -y install libatlas-dev libatlas-base-dev liblapack-dev gfortran libmpc-dev libmpfr-dev libfreetype6-dev libpng-dev zlib1g-dev texlive-fonts-recommended ccache
    sudo apt-get update
    sudo apt-get -y install python-gmpy
    mkdir builds
    pushd builds
    pip install --install-option="--no-cython-compile" Cython==0.22
    pip install $NUMPYSPEC
    pip install nose mpmath argparse Pillow codecov
    pip install --upgrade pip setuptools
    pip install gmpy
    if [ "$TESTMODE" == "full" ]; then
      pip install coverage;
    fi
    if [ "$USE_WHEEL" == "1" ]; then
      pip install wheel;
    fi
    if [ "$REFGUIDE_CHECK" == "1" ]; then
      pip install matplotlib Sphinx==1.2.3;
    fi
    python -V
    popd